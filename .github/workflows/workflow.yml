name: CI Pipeline

on:
  push:
    branches:
      - main  # Change to your branch name if needed

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      # Install PowerShell
      - name: Install PowerShell
        run: |
          sudo apt-get update
          sudo apt-get install -y wget apt-transport-https software-properties-common
          wget -q "https://packages.microsoft.com/keys/microsoft.asc" -O- | sudo apt-key add -
          wget -q https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/packages-microsoft-prod.deb
          sudo dpkg -i packages-microsoft-prod.deb
          sudo apt-get update
          sudo apt-get install -y powershell
      
      # Install Azure PowerShell Module
      - name: Install Azure PowerShell Module
        run: pwsh -Command "Install-Module -Name Az -AllowClobber -Scope CurrentUser -Force"

      # Login to Azure (using Service Principal)
         # Login to Azure (using Service Principal)
      - name: Login to Azure
        run: |
          pwsh -Command "
            $ErrorActionPreference = 'Stop'
            $AppId = '${{ secrets.AZURE_APP_ID }}'
            $Password = '${{ secrets.AZURE_PASSWORD }}'
            $TenantId = '${{ secrets.AZURE_TENANT_ID }}'
            
            # Debugging output for credentials
            Write-Host 'AppId: ' $AppId
            Write-Host 'TenantId: ' $TenantId
      
            $SecurePassword = ConvertTo-SecureString $Password -AsPlainText -Force
            $Cred = New-Object System.Management.Automation.PSCredential ($AppId, $SecurePassword)
      
            # Output the credential type for debugging
            Write-Host 'Credential type: ' $Cred.GetType().FullName
      
            Connect-AzAccount -Credential $Cred -Tenant $TenantId
          "

      # Run the PowerShell Script
      - name: Run CreateVM Script
        run: pwsh ./CreateVM.ps1
