name: CI Pipeline

on:
  push:
    branches:
      - main  # Adjust to your branch if needed

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3  # Use v3 of actions/checkout for latest features

      # Install PowerShell
      - name: Install PowerShell
        run: |
          sudo apt-get update
          sudo apt-get install -y wget apt-transport-https software-properties-common
          wget -q "https://packages.microsoft.com/keys/microsoft.asc" -O- | sudo apt-key add -
          wget -q https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb  # Use a stable Ubuntu version
          sudo dpkg -i packages-microsoft-prod.deb
          sudo apt-get update
          sudo apt-get install -y powershell

      # Install Azure PowerShell Module
      - name: Install Azure PowerShell Module
        run: pwsh -Command "Install-Module -Name Az -AllowClobber -Scope CurrentUser -Force"

      # Login to Azure (using Service Principal)
      - name: Login to Azure
        env:
          AZURE_APP_ID: ${{ secrets.AZURE_APP_ID }}
          AZURE_PASSWORD: ${{ secrets.AZURE_PASSWORD }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        run: |
          pwsh -Command "
            $appId = '${{ secrets.AZURE_APP_ID }}';
            $password = '${{ secrets.AZURE_PASSWORD }}' | ConvertTo-SecureString -AsPlainText -Force;
            $credential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $appId, $password;
            Connect-AzAccount -ServicePrincipal -Tenant '${{ secrets.AZURE_TENANT_ID }}' -Credential $credential;
          "

      # Run the PowerShell Script
      - name: Run CreateVM Script
        run: pwsh ./CreateVM.ps1
